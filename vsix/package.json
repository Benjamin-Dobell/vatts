{
	"name": "vatts",
	"publisher": "ldlework",
	"displayName": "vatts",
	"description": "Tabletop Simulator support for VSCode",
	"version": "0.0.2",
	"engines": {
		"vscode": "^1.31.0"
	},
	"categories": [
		"Other"
	],
	"main": "./out/main.js",
	"activationEvents": [
		"onLanguage:lua",
		"onLanguage:typescript",
		"onCommand:vatts.compiler.cleanLua",
		"onCommand:vatts.compiler.cleanLuaAndBundles",
		"onCommand:vatts.compiler.compile",
		"onCommand:vatts.compiler.compileBundle",
		"onCommand:vatts.compiler.compileBundleUpdate",
		"onCommand:vatts.bundler.bundle",
		"onCommand:vatts.bundler.bundleUpdate",
		"onCommand:vatts.bundler.cleanBundles",
		"onCommand:vatts.bundler.showOriginal",
		"onCommand:vatts.tts.evalBufferAsJSON",
		"onCommand:vatts.tts.evalFileAsJSON",
		"onCommand:vatts.tts.evalSelectionAsJSON",
		"onCommand:vatts.tts.sendBufferAsJSON",
		"onCommand:vatts.tts.sendFileAsJSON",
		"onCommand:vatts.tts.sendSelectionAsJSON",
		"onCommand:vatts.tts.startServer",
		"onCommand:vatts.tts.stopServer",
		"onCommand:vatts.tts.update"
	],
	"contributes": {
		"commands": [
			{
				"command": "vatts.compiler.cleanLua",
				"title": "Clean Lua",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.compiler.cleanLuaAndBundles",
				"title": "Clean Lua and Bundles",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.compiler.compile",
				"title": "Compile",
				"category": "VATTS"
			},
			{
				"command": "vatts.compiler.compileBundle",
				"title": "Compile and Bundle",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.compiler.compileBundleUpdate",
				"title": "Compile, Bundle and Update",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.bundler.bundle",
				"title": "Bundle",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.bundler.bundleUpdate",
				"title": "Bundle and Update",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.bundler.cleanBundles",
				"title": "Clean Bundles",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.bundler.showOriginal",
				"title": "Show Original",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.evalFileAsLua",
				"title": "Eval File as Lua",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.evalBufferAsLua",
				"title": "Eval Buffer as Lua",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.evalSelectionAsLua",
				"title": "Eval Selection as Lua",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.sendFileAsJSON",
				"title": "Send File as JSON",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.sendBufferAsJSON",
				"title": "Send Buffer as JSON",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.sendSelectionAsJSON",
				"title": "Send Selection as JSON",
				"category": "VATTS",
				"when": "editorLangId == lua"
			},
			{
				"command": "vatts.tts.startServer",
				"title": "Connect to TTS"
			},
			{
				"command": "vatts.tts.stopServer",
				"title": "Disconnect from TTS"
			},
			{
				"command": "vatts.tts.updateGame",
				"title": "Update",
				"category": "VATTS",
				"when": "editorLangId == lua"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Vatts",
			"properties": {
				"vatts.compiler": {
					"type": "object",
					"default": {
						"input-files": [
							"ts/global.ts"
						],
						"output-dir": "lua"
					},
					"properties": {
						"input-files": {
							"type": "array",
							"description": "What Typescript files to compile to Lua."
						},
						"output-dir": {
							"type": "string",
							"description": "Output directory for Typescript compiled Lua."
						}
					}
				},
				"vatts.bundler": {
					"type": "object",
					"default": {
						"input-files": [
							"lua/global/index.lua"
						],
						"output-dir": "ttslua",
						"search-dirs": [],
						"module-start-marker": "^-- '([^']+)' STARTS HERE",
						"module-end-marker": "^-- '([^']+)' ENDS HERE"
					},
					"properties": {
						"input-files": {
							"type": "array",
							"description": "Which files to compile to Lua."
						},
						"output-dir": {
							"type": "string",
							"description": "Output directory for bundled Lua packages."
						},
						"search-dirs": {
							"type": "array",
							"description": "Paths to search for required packages."
						},
						"module-start-marker": {
							"type": "string",
							"description": "Regex for locating the start of sourcemapped modules."
						},
						"module-end-marker": {
							"type": "string",
							"description": "Regex for locating the end of sourcemapped modules."
						}
					}
				},
				"vatts.tts": {
					"type": "object",
					"default": {
						"client-port": 39999,
						"server-port": 39998,
						"auto-listen": true,
						"game-scripts": {
							"global": "ttslua/global.ttslua"
						}
					},
					"properties": {
						"client-port": {
							"type": "number",
							"description": "Port for sending messages to TTS."
						},
						"server-port": {
							"type": "number",
							"description": "Port for receiving messages from TTS."
						},
						"auto-listen": {
							"type": "boolean",
							"description": "Automatically start TTS listen server."
						},
						"game-scripts": {
							"type": "object",
							"description": "Mapping of GUIDs to scripts."
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"fix": "rmdir /s /q node_modules && rm package-lock.json && npm i --no-optional && npm dedupe",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"vscode": "^1.1.28",
		"tslint": "^5.12.1",
		"@types/node": "^10.12.21",
		"@types/mocha": "^2.2.42",
		"@types/nunjucks": "3.1.1",
		"@types/rimraf": "2.0.2",
		"@types/mkdirp": "0.5.1",
		"tslint-consistent-codestyle": "1.15.0",
		"tslint-microsoft-contrib": "6.0.0"
	},
	"dependencies": {
		"mkdirp": "0.5.1",
		"nunjucks": "3.1.7",
		"promise-socket": "^3.1.1",
		"rimraf": "2.0.2",
		"typescript": "^3.3.1",
		"typescript-to-lua": "^0.15.2"
	}
}
